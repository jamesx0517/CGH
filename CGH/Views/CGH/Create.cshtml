@model CGH.Models.Hr

@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
</head>
<h2>Create</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="~/jquery/jquery-ui.css" />


    <script src="~/jquery/jquery-ui.js"></script>
    <script src="~/jquery/datepicker-zh-TW.js"></script>
    <script>
        $(function () {
            $("#Birthday").datepicker(
                {
                    changeMonth: true,
                    changeYear: true
                }
            );

        });
        $(function () {
            $("#StartDate").datepicker(

                {
                    changeMonth: true,
                    changeYear: true
                });

        });
        $(function () {
            $("#EndDate").datepicker(

                {
                    changeMonth: true,
                    changeYear: true
                });

        });
        $(function () {
            $("#Retired").datepicker(

                {
                    changeMonth: true,
                    changeYear: true
                }); 
     

        });

        $(function () {
            $("#MEdate").datepicker(

                {
                    changeMonth: true,
                    changeYear: true
                });


        });
    </script>

    <script type="text/javascript">
        //上方，第一號下拉式選單，名為 DepartmentId
        //下方，第二號下拉式選單，名為 UserId  (以傳統HTML表單的寫法來做，<select>)
        $(document).ready(function () {
            $('#Dep1ID').change(function () {
            // 第一號下拉式選單若被點選，第二號就重新填入新的「子選項」。

             var userSelectId = $.trim($('#Dep1ID option:selected').val());
                $('#Dep2ID').empty();  // 清空第二號 下拉式選單
                $('#Dep3ID').empty();
                $('#Dep').empty();

            if (userSelectId.length == 0) {
                $('#Dep2ID').append($('<option></option>').val('').text('-= 請選擇 =-'));
            }
            else {
                $.ajax( {    // jQuery AJAX 參考資料 http://api.jquery.com/jquery.ajax/
                        url: "@Url.Content("~/CGH/GetUserTable")",   // 記得 URL網址 前後用雙引號（"）包起來
                        data: { id: userSelectId },  // 傳給上面URL網址的數值
                        type: 'post',
                        cache: false,
                        async: false,
                        dataType: 'html',   // 可改成 text
                    success: function (data) {
                            if (data.length > 0) {
                                //*******************************************
                                // 如果有傳回資料，就把資料 <option>放入 第二號下拉式選單底下，當成子選項。
                                $('#Dep2ID').append(data);



                                //*******************************************
                        }   },   // success end
                        error: function () {
                            alert('例外狀況，AJAX有問題～～');
                            // AJAX Error 請看 https://stackoverflow.com/questions/12734714/jquery-ajax-error-handling-http-status-codes
                        }   // error end
                });

                  
                $.ajax( {    // jQuery AJAX 參考資料 http://api.jquery.com/jquery.ajax/
                        url: "@Url.Content("~/CGH/GetDep")",   // 記得 URL網址 前後用雙引號（"）包起來
                        data: { id: userSelectId },  // 傳給上面URL網址的數值
                        type: 'post',
                        cache: false,
                        async: false,
                        dataType: 'html',   // 可改成 text
                    success: function (data) {
                            if (data.length > 0) {
                                //*******************************************
                                // 如果有傳回資料，就把資料 <option>放入 第二號下拉式選單底下，當成子選項。
                                $('#Dep').replaceWith(data);



                                //*******************************************
                        }   },   // success end
                        error: function () {
                            alert('例外狀況，AJAX有問題～～');
                            // AJAX Error 請看 https://stackoverflow.com/questions/12734714/jquery-ajax-error-handling-http-status-codes
                        }   // error end
                });
// ajax end
            }  // if end

            });  // .change() end

            $('#Dep2ID').change(function () {


             var user2SelectId = $.trim($('#Dep2ID option:selected').val());
                $('#Dep3ID').empty();
                $('#Dep').empty();
            if (user2SelectId.length == 0) {
                $('#Dep3ID').append($('<option></option>').val('').text('-= 請選擇 =-'));
            }
            else {
                $.ajax( {
                        url: "@Url.Content("~/CGH/GetUserTable2")",
                        data: { id: user2SelectId },
                        type: 'post',
                        cache: false,
                        async: false,
                        dataType: 'html',
                    success: function (data) {
                            if (data.length > 0) {
                                $('#Dep3ID').append(data);

                        }   },
                        error: function () {
                            alert('例外狀況，AJAX有問題～～');
                        }
                });
                $.ajax( {    // jQuery AJAX 參考資料 http://api.jquery.com/jquery.ajax/
                        url: "@Url.Content("~/CGH/GetDep")",   // 記得 URL網址 前後用雙引號（"）包起來
                        data: { id: user2SelectId },  // 傳給上面URL網址的數值
                        type: 'post',
                        cache: false,
                        async: false,
                        dataType: 'html',   // 可改成 text
                    success: function (data) {
                            if (data.length > 0) {
                                //*******************************************
                                // 如果有傳回資料，就把資料 <option>放入 第二號下拉式選單底下，當成子選項。
                                $('#Dep').replaceWith(data);



                                //*******************************************
                        }   },   // success end
                        error: function () {
                            alert('例外狀況，AJAX有問題～～');
                            // AJAX Error 請看 https://stackoverflow.com/questions/12734714/jquery-ajax-error-handling-http-status-codes
                        }   // error end
                });


            }
            });

              $('#Dep3ID').change(function () {


             var user3SelectId = $.trim($('#Dep3ID option:selected').val());
                
                $('#Dep').empty();
            if (user3SelectId.length == 0) {
                $('#Dep3ID').append($('<option></option>').val('').text('-= 請選擇 =-'));
            }
            else {
                $.ajax( {    // jQuery AJAX 參考資料 http://api.jquery.com/jquery.ajax/
                        url: "@Url.Content("~/CGH/GetDep")",   // 記得 URL網址 前後用雙引號（"）包起來
                        data: { id: user3SelectId },  // 傳給上面URL網址的數值
                        type: 'post',
                        cache: false,
                        async: false,
                        dataType: 'html',   // 可改成 text
                    success: function (data) {
                            if (data.length > 0) {
                                //*******************************************
                                // 如果有傳回資料，就把資料 <option>放入 第二號下拉式選單底下，當成子選項。
                                $('#Dep').replaceWith(data);



                                //*******************************************
                        }   },   // success end
                        error: function () {
                            alert('例外狀況，AJAX有問題～～');
                            // AJAX Error 請看 https://stackoverflow.com/questions/12734714/jquery-ajax-error-handling-http-status-codes
                        }   // error end
                });


            }
            });
        });
    </script>

    <div class="form-horizontal">
        <h4>Hr</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MemberID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ var DDL = new CGH.Models.DropDownList();}
                @Html.DropDownList("Status", DDL.GetStatus() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDcardNO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDcardNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDcardNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{var listitemNa = new List<SelectListItem>

                                                                {
                                                                  new SelectListItem{Text="本國",Value="1"},
                                                                  new SelectListItem{Text="外僑",Value="2"},


                                                                    };
                }
                @Html.DropDownList("Nationality", listitemNa, "請選擇", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Probation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Probation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Probation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Welfare, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Welfare", DDL.GetWelfare() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Welfare, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Labor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Labor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Labor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hire, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Hire", DDL.GetHire() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Hire, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @{var listitemDEP = new List<SelectListItem>

                              {
                              new SelectListItem{Text="請選擇",Value=""},
                          };

                }
                <!-- **************************************************************************************** -->
                @Html.DropDownList("Dep1ID", ViewBag.DtListItem as SelectList, "請選擇", new { @class = "form-control" })

                @Html.DropDownList("Dep2ID", listitemDEP, new { @class = "form-control" })
                @Html.DropDownList("Dep3ID", listitemDEP, new { @class = "form-control" })
                
                <select id="Dep" name="Dep" class="form-control"></select>



                @Html.ValidationMessageFor(model => model.Dep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Title", DDL.GetTitle() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Boss, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BOSS", DDL.GetManager() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                
                @Html.ValidationMessageFor(model => model.Boss, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Agent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Agent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Agent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkingHR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("WorkingHR", DDL.GetWorkingHR() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WorkingHR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PassPortID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PassPortID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PassPortID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marriage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Marriage", DDL.GetMarriage() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Marriage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Blood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{var listitemBlood = new List<SelectListItem>

                                                            {
                                                              new SelectListItem{Text="A",Value="1"},
                                                              new SelectListItem{Text="B",Value="2"},
                                                              new SelectListItem{Text="O",Value="3"},
                                                              new SelectListItem{Text="AB",Value="4"},

                                                                };
                }
                @Html.DropDownList("Blood", listitemBlood, "請選擇", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{var listitemSex = new List<SelectListItem>

                                                        {
                                                          new SelectListItem{Text="男",Value="1"},
                                                          new SelectListItem{Text="女",Value="2"},

                                                            };
                }
                @Html.DropDownList("Sex", listitemSex, "請選擇", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Highestedu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Highestedu", DDL.GetHighestedu() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Highestedu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Graduation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Graduation", DDL.GetGraduation() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Graduation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Military, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Military", DDL.GetMilitary() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Military, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Retired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Retired, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Retired, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Health, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Health, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Health, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MEdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MEdate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MEdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthplace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthplace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthplace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Method, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Method, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Method, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Send, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Send", DDL.GetSend() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Send, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postal1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              
                @Html.EditorFor(model => model.Postal1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postal1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postal2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Postal2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postal2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emergency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emergency, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Emergency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Relationship", DDL.GetRelationship() as SelectList, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ephone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ephone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ephone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
